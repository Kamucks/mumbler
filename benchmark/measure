#!/usr/bin/env python

import os
import subprocess
import sys
import time

from argparse import ArgumentParser
from os.path import dirname, join, normpath, realpath


GRAAL_HOME = os.environ.get('GRAAL_HOME') if 'GRAAL_HOME' in os.environ else \
             os.environ.get('JAVA_HOME')
if not GRAAL_HOME:
    raise Exception('No Graal VM home set')

MUMBLER_JAR = os.environ.get('MUMBLER_JAR')
if not MUMBLER_JAR:
    raise Exception('MUMBLER_JAR environment variable not set')


def run(name, lang_args, suffix):
    print suffix
    print '--------------'
    filename = join(name, name + '.' + suffix)
    start = int(time.time() * 1000)
    subprocess.call(lang_args + [filename])
    end = int(time.time() * 1000)
    print 'total time: %s\n' % (end - start)

def run_simple_mumbler(name):
    simple_mumbler_dir = normpath(join(dirname(realpath(__file__)),
                                        '../simple'))
    p = subprocess.Popen(['ant', '-f', join(simple_mumbler_dir, 'build.xml'),
                          'jar'],
                         stdout=subprocess.PIPE)
    p.communicate()
    
    print 'simple',
    run(name, ['java', '-jar', join(simple_mumbler_dir, 'dist/mumbler.jar')],
        'mumbler')

def run_truffle_mumbler(name):
    java = normpath((join(GRAAL_HOME, 'bin/java')))
    print 'truffle',
    run(name, [java, '-graal', '-jar', MUMBLER_JAR],
        'mumbler')

def run_racket(name):
    run(name, ['racket'], 'rkt')

def run_node(name):
    run(name, ['nodejs'], 'js')

def run_python(name):
    run(name, ['python'], 'py')

parser = ArgumentParser(description='Take benchmark measurements')
parser.add_argument('benchmark', type=str,
                    help='directory name with benchmark')

args = parser.parse_args()

run_racket(args.benchmark)
run_node(args.benchmark)
run_python(args.benchmark)
run_simple_mumbler(args.benchmark)
run_truffle_mumbler(args.benchmark)
